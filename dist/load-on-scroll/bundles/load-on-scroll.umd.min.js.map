{"version":3,"sources":["ng://load-on-scroll/lib/load-on-scoll.directive.ts","ng://load-on-scroll/lib/load-on-scroll.module.ts"],"names":["LoadOnScollDirective","el","renderer","this","first","rotateOnLoad","disableOnLoad","loadTrigger","EventEmitter","prototype","ngOnInit","emitCurrentValues","ngOnChanges","_this","scrollSubscription","unsubscribe","fromEvent","window","pipe","debounceTime","subscribe","e","scrollY","innerHeight","document","body","scrollHeight","onClick","loadDoneSubject","setOnLoad","itemsPerPage","emit","limit","load","disable","rotate","on","componentToRotate","rotateOnLoadChildSelector","nativeElement","querySelector","addClass","removeClass","setProperty","Directive","args","selector","ElementRef","Renderer2","Input","Output","HostListener","LoadOnScrollModule","NgModule","declarations","imports","exports"],"mappings":"wWAAA,IAAAA,EAAA,WA+BE,SAAAA,EAAoBC,EAAwBC,GAAxBC,KAAAF,GAAAA,EAAwBE,KAAAD,SAAAA,EAtB5CC,KAAAC,MAAgB,EAYhBD,KAAAE,cAAe,EAGfF,KAAAG,eAAgB,EAGhBH,KAAAI,YAAc,IAAIC,EAAAA,aA2DpB,OArDER,EAAAS,UAAAC,SAAA,WACEP,KAAKQ,qBAGPX,EAAAS,UAAAG,YAAA,WAAA,IAAAC,EAAAV,KACMA,KAAKW,oBAAoBX,KAAKW,mBAAmBC,cAErDZ,KAAKW,mBAAqBE,EAAAA,UAAUC,OAAQ,UACzCC,KAAKC,EAAAA,aAAa,MAClBC,UAAS,SAACC,GACLJ,OAAOK,QAAUL,OAAOM,aAAeC,SAASC,KAAKC,cACvDb,EAAKc,YAIPxB,KAAKyB,iBACPzB,KAAKyB,gBAAgBR,UAAS,SAACC,GAC7BR,EAAKgB,WAAU,MAMrB7B,EAAAS,UAAAkB,QADA,WAEExB,KAAK0B,WAAU,GACf1B,KAAKC,OAASD,KAAK2B,aACnB3B,KAAKQ,qBAGCX,EAAAS,UAAAE,kBAAR,WACER,KAAKI,YAAYwB,KAAK,CACpBC,MAAO7B,KAAK2B,aACZ1B,MAAOD,KAAKC,SAIRJ,EAAAS,UAAAoB,UAAR,SAAkBI,GACZ9B,KAAKG,eAAeH,KAAK+B,QAAQD,GACjC9B,KAAKE,cAAcF,KAAKgC,OAAOF,IAG7BjC,EAAAS,UAAA0B,OAAR,SAAeC,OACPC,EAAoBlC,KAAKmC,0BAC3BnC,KAAKF,GAAGsC,cAAcC,cAAcrC,KAAKmC,2BACzCnC,KAAKF,GAAGsC,cAERH,EAAIjC,KAAKD,SAASuC,SAASJ,EAAmB,cAC7ClC,KAAKD,SAASwC,YAAYL,EAAmB,eAG5CrC,EAAAS,UAAAyB,QAAR,SAAgBE,GACdjC,KAAKD,SAASyC,YAAYxC,KAAKF,GAAGsC,cAAe,WAAYH,wBAhFhEQ,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,+DALqCC,EAAAA,kBAAYC,EAAAA,4CAQ1DC,EAAAA,4BAGAA,EAAAA,+BAGAA,EAAAA,yCAGAA,EAAAA,4BAGAA,EAAAA,6BAGAA,EAAAA,2BAGAC,EAAAA,wBA6BAC,EAAAA,aAAYN,KAAA,CAAC,YA+BhB7C,EAtFA,GCAAoD,EAAA,WAGA,SAAAA,KAKiC,2BALhCC,EAAAA,SAAQR,KAAA,CAAC,CACRS,aAAc,CAACtD,GACfuD,QAAS,GACTC,QAAS,CAACxD,OAEqBoD,EARjC","sourcesContent":["import { Directive, Input, Output, EventEmitter, ElementRef, Renderer2, HostListener } from '@angular/core';\nimport { Subject, Subscription, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n  selector: '[dmLoadOnScoll]'\n})\nexport class LoadOnScollDirective {\n  @Input()\n  first: number = 0;\n\n  @Input()\n  itemsPerPage: number;\n\n  @Input()\n  loadDoneSubject: Subject<any>;\n\n  @Input()\n  rotateOnLoadChildSelector: string;\n\n  @Input()\n  rotateOnLoad = false;\n\n  @Input()\n  disableOnLoad = false;\n\n  @Output()\n  loadTrigger = new EventEmitter<any>();\n\n  private scrollSubscription: Subscription;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    this.emitCurrentValues();\n  }\n\n  ngOnChanges() {\n    if (this.scrollSubscription) this.scrollSubscription.unsubscribe();\n\n    this.scrollSubscription = fromEvent(window, 'scroll')\n      .pipe(debounceTime(200))\n      .subscribe(e => {\n        if (window.scrollY + window.innerHeight >= document.body.scrollHeight) {\n          this.onClick();\n        }\n      });\n\n    if (this.loadDoneSubject) {\n      this.loadDoneSubject.subscribe(e => {\n        this.setOnLoad(false);\n      });\n    }\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.setOnLoad(true);\n    this.first += this.itemsPerPage;\n    this.emitCurrentValues();\n  }\n\n  private emitCurrentValues() {\n    this.loadTrigger.emit({\n      limit: this.itemsPerPage,\n      first: this.first\n    });\n  }\n\n  private setOnLoad(load: boolean) {\n    if (this.disableOnLoad) this.disable(load);\n    if (this.rotateOnLoad) this.rotate(load);\n  }\n\n  private rotate(on: boolean) {\n    const componentToRotate = this.rotateOnLoadChildSelector\n      ? this.el.nativeElement.querySelector(this.rotateOnLoadChildSelector)\n      : this.el.nativeElement;\n\n    if (on) this.renderer.addClass(componentToRotate, 'los-rotate');\n    else this.renderer.removeClass(componentToRotate, 'los-rotate');\n  }\n\n  private disable(on: boolean) {\n    this.renderer.setProperty(this.el.nativeElement, 'disabled', on);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LoadOnScollDirective } from './load-on-scoll.directive';\n\n@NgModule({\n  declarations: [LoadOnScollDirective],\n  imports: [],\n  exports: [LoadOnScollDirective]\n})\nexport class LoadOnScrollModule {}\n"]}